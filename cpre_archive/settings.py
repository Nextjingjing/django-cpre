"""
Django settings for cpre_archive project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# โหลดค่าใน .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

SECRET_KEY = os.getenv("SECRET_KEY", "default-secret-key")  # อ่านค่า SECRET_KEY
DEBUG = os.getenv("DEBUG", "False") == "True"  # แปลงเป็น Boolean

ALLOWED_HOSTS = []

SITE_ID = 1

# ใช้ SimpleJWT สำหรับ Token Authentication
DJREST_AUTH = {
    'USE_JWT': True,
    'JWT_AUTH_COOKIE': 'access_token',
    'JWT_AUTH_REFRESH_COOKIE': 'refresh_token',
}

ACCOUNT_AUTHENTICATION_METHOD = "email"  # ✅ ใช้ Email เป็นตัวล็อกอิน
ACCOUNT_USERNAME_REQUIRED = False        # ✅ ไม่ต้องใช้ Username
ACCOUNT_EMAIL_REQUIRED = True            # ✅ บังคับให้มี Email เสมอ
ACCOUNT_EMAIL_VERIFICATION = "optional"  # ✅ (เลือกได้) ถ้าไม่ต้องการให้ verify email



# Application definition
# ✅ หรืออนุญาตเฉพาะ React ที่ http://localhost:3000
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]

# ✅ ถ้าใช้ Credential เช่น JWT Token ให้เพิ่ม:
CORS_ALLOW_CREDENTIALS = True

# ✅ อนุญาตเฉพาะ Header ที่ต้องใช้
CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'X-CSRFToken',
]

# ✅ เปิดให้ใช้ Methods ต่างๆ (GET, POST, PUT, DELETE)
CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',

    # แอปในโปรเจค
    'course',
    'curriculum',
    'note',

    # Django Rest Framework
    'rest_framework',  # DRF
    'rest_framework.authtoken',

    # django-allauth และ Social Login
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    # dj-rest-auth (ถ้าใช้)
    'dj_rest_auth',  # API สำหรับ Authentication (Login, Register, Logout)
    'dj_rest_auth.registration',  # API สำหรับสมัครสมาชิก

    'rest_framework_simplejwt',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',  # ใช้ Token Auth
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": os.getenv("GOOGLE_CLIENT_ID"),
            "secret": os.getenv("GOOGLE_CLIENT_SECRET"),
        },
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"}
    }
}

GOOGLE_REDIRECT_URI = os.getenv("GOOGLE_REDIRECT_URI")

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # ✅ เพิ่มตรงนี้
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # ✅ เพิ่มตรงนี้
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'cpre_archive.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cpre_archive.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',  # รองรับ Social Login
]


LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'